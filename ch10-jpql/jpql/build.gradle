buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations{
    compileOnly{
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * QueryDSL 설정 추가
 */
//1. Q파일 빌드 경로
def queryDslDir = "$buildDir/generated/querydsl";

//2. JPA 사용 여부 및 사용 경로 설정
querydsl{
    jpa = true
    querydslSourcesDir = queryDslDir;
}

//3. 빌드 시 사용할 sourceSet 추가(자바 코드를 읽어서 queryDslDir 폴더 내부에 Q파일로 저장해둘 것)
sourceSets{
    main.java.srcDir queryDslDir
}

//4. queryDsl이 compileClassPath를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

//Unable to load class 'com.querydsl.apt.jpa.JPAAnnotationProcessor'.
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
